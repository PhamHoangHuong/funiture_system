name: Laravel React TS CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Composer Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_HOST: 103.169.35.190
        DB_PORT: 3306
        DB_DATABASE: db_luxadecor
        DB_USERNAME: db_luxadecor
        DB_PASSWORD: "QV2!52pcpW@3lW"
      run: vendor/bin/phpunit

  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
    - name: Install dependencies
      run: npm ci
    - name: Build
      run: npm run build

  deploy:
    needs: [laravel-tests, build-frontend]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install SSH Client
      run: sudo apt-get install openssh-client -y
    - name: Setup SSH key
      uses: webfactory/ssh-agent@v0.5.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Add host key
      run: ssh-keyscan -H 103.169.35.190 >> ~/.ssh/known_hosts
    - name: Deploy to Hosting
      run: |
        rsync -avz --delete \
          -e "ssh -o StrictHostKeyChecking=no" \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='node_modules' \
          --exclude='.env' \
          ./ hoanghuo@103.169.35.190:~/funiture_system/
    - name: Run Post-Deploy Commands
      run: |
        ssh -o StrictHostKeyChecking=no hoanghuo@103.169.35.190 '
          cd ~/funiture_system &&
          composer install --no-interaction --prefer-dist --optimize-autoloader &&
          php artisan migrate --force &&
          npm ci &&
          npm run build &&
          php artisan config:cache &&
          php artisan route:cache &&
          php artisan view:cache
        '
